/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
@Field static portal=[
	path:'/news',
	title:'News',
	roles:['auth']
]

@Tag(
	info="render a news feed portlet",
	attrs=[
		@Attr(info="RSS URL",name="url"),
		@Attr(info="Portlet title",name="title"),
		@Attr(info="Number of stories",name="max"),
		@Attr(info="Double-width portlet",name="wide"),
		@Attr(info="portlet header link",name="link"),
	]
)
class NewsFeedPortlet{
	def tag(Map atts, Closure body){
		def title = resolve(atts,'title',String.class)
		def url = resolve(atts,'url',String.class)
		def max = resolve(atts,'max',Integer.class)
		def wide = resolve(atts,'wide',Boolean.class)
		def link = resolve(atts,'link',String.class)
		if(!max){
			max= 10;
		}
		def feed = cache(name:'news',key:[url,max],ttl:60,refresh:30,{
			map.each{ entry ->
				System.out.println("Getting ${entry.key[1]} from ${entry.key[0]}")
				entry.value = http(url:entry.key[0],{}).channel.item.take(entry.key[1]).collect{ [
									title : it.title,
									link : it.link,
									description : it.description,
									pubDate : it.pubDate
								] }
			}
		})
		write{<~
			<g:portlet title="${title}" wide="${wide}" link="${link}">
				<g:each var="item" in="${feed}">
					<div style="margin:8px">
						<a href="${item.link}">${item.title}</a>
						<div style="margin-left:12px">
							<span style="font-size:0.7em">- ${item.pubDate}</span>
							<g:if test="${item.description && item.description!=item.title}">
								<div style="margin-top:8px">
								${item.description}
								</div>
							</g:if>
						</div>
					</div>
				</g:each>
			</g:portlet>
		~>}
	}
}

<~
	<g:portal> 
		<g:newsFeedPortlet title="ABC News" url="http://feeds.abcnews.com/abcnews/topstories" wide="true" />
		<g:newsFeedPortlet title="ESPN" url="http://www.espn.com/espn/rss/news" />
	</g:portal>
~>