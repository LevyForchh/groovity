/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
@Field static portal = [
	path:'/admin/roles/',
	title:"Roles",
	roles:["auth","admin"],
	tabs:true,
	order:4
];

@Field static args = [
	role:null,
	rolesTree_selected:"/",
	group_id:0
];

@Field rolesLib = load("/groovity/portal/lib/roles")
@Field portalLib = load('/groovity/portal/lib/portal')
@Field sql = load('/groovity/sql').sql('portalDB')
load '/data/factory'

formError = null;
formMessage = null;

def availableRoles = rolesLib.getRoles(rolesTree_selected);

def scopeFormat = { key, value ->
	def href = uri(base:request.requestURI,{ param(name:"rolesTree_selected",value:pathStack.join('')+key) });
	<~ <a href="${href}">${key}</a> ~>
}
def user = request.userPrincipal

if(request.method=='POST'){
	if(role && group_id && user.hasRole(request.session, rolesTree_selected, ['admin'])){
		try{
			def group = factory('group',"${group_id}")
			if(role.getClass().isArray()){
				for(r in role){
					group.addRole(rolesTree_selected,r,user.id);
				}
			}
			else{
				//log(info:"Processing post ${group} = ${role} in ${rolePath}");
				group.addRole(rolesTree_selected,role,user.id);
			}
		}
		catch(Exception e){
			formError = e;
			log(error:"Error in form processing",thrown:e);
		}
	}
}
delegatedAdmin = user.hasRole(request.session, rolesTree_selected, ['admin']);
<~
<g:portal>
<div class="portlet">
	<g:treeBrowser id="rolesTree" title="Roles Scope" map="${rolesLib.pathTree}" format="${scopeFormat}"/>
</div>
<div class="portlet">
<g:sqlTable id="group" title="Choose a Group" table="crew" cols="[name:'Group Name',created:'Created',id:null]"  sortCol="created" sortOrder="DESC" sql="${sql}"/>
</div>
<g:if test="${delegatedAdmin}">
<div class="portlet">
<div class="title">Assign Role </div>
<form method="POST">
<input type="hidden" name="group_id" value="${group_id}" />
<input type="hidden" name="rolesTree_seleced" value="${rolesTree_selected}" />
<select name="role" size="20" multiple>
	<g:each var="role" in="${availableRoles}">
		<option value="${role}">${role}</option>
	</g:each>
</select>

<input 
<g:if test="${!group_id}"> disabled="disabled" </g:if>
type="submit">
</form>
</div>
</g:if>
<div class="portlet wide">
	<g:sqlTable id="allRoles" deleteTable="${delegatedAdmin?'role':null}" title="Configured roles" where="[path:rolesTree_selected]" table="rolesView" cols="[groupName:'Group', role:'Role',id:null,created:'Date']"  sortCol="created" sortOrder="DESC" sql="${sql}" />
</div>
</g:portal>
~>