/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
load '/data/factory'

def s1 = factory('story','20')

s1.pointer.abc="xyz"

def s1r = factory(s1.pointer)

def s1mpe = null
try{
	assert s1r.pointer.abc != 'xyz'
}
catch(MissingPropertyException mpe){
	s1mpe = mpe
}

assert s1mpe != null

def newPointer = new Pointer("story","20copy","testing")
newPointer.mno = "qrs"

s1.pointer = newPointer

factory.cache(s1)

def s1r2 = factory(newPointer)

assert s1.pointer.id == '20copy'
assert s1r2.pointer.id == '20copy'
assert s1.pointer.rel == 'testing'
assert s1r2.pointer.rel == null

def s1r2mpe = null
try{
	assert s1r2.pointer.mno != 'qrs'
}
catch(MissingPropertyException mpe){
	s1r2mpe = mpe
}

assert s1r2mpe != null

def authors = s1.resolveAuthors()

assert authors.size() == 2

assert authors[0].twitter == '@JimBeam'

def firstRef = s1.references[0]

assert firstRef.autostart == true

assert firstRef.rel == 'embed'

def firstRefClone = firstRef.copy()

firstRefClone.foo='bar'

def mpe = null
try{
	assert firstRef.foo != 'bar'
}
catch(MissingPropertyException e){
	mpe = e;
}

assert mpe != null

assert firstRefClone.foo == 'bar'

def refs = s1.resolveReferences()

assert refs.size() == 3

assert refs[0].pointer.rel == null
assert refs[0].duration == 360000
assert refs[1].name.contains('pinhole')
assert refs[1].body.contains('box')

assert refs[0].pointer.id=='30'
assert refs[1].pointer.id=='40'
assert refs[2].pointer.id=='50'

def s2 = factory('story','40')
assert !s2.hasAuthors()
s2.authors = ['1']
assert !factory('story','40').hasAuthors()
assert s2.hasAuthors()
s2.store()
factory.invalidate('story','40')
assert factory('story','40').hasAuthors()

def ns = factory('story')
ns.pointer.id = '999'
ns.title="Hello goodbye"
ns.store()

def ns2 = factory('story','999')
assert ns2.title == ns.title