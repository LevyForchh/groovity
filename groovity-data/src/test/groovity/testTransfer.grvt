/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
load '/data/factory'

CountDownLatch latch = new CountDownLatch(1)

def someThing = factory('thingFull')

someThing.count = 11
someThing.name = 'Foo bar'
someThing.date = new Date()
someThing.store()

offer(channel:'/data/transfer'){[
	transfer:[
		from: 'thingFull',
		id: someThing.pointer.id,
		to: ['thingCopy','thingPart']
	],
	callback: { results->
		log(debug:"Got data transfer callback ${results}")
		latch.countDown()
	}
]}

assert latch.await(2,TimeUnit.SECONDS)

def somethingCopy = factory('thingCopy',someThing.pointer.id)
def somethingPart = factory('thingPart',someThing.pointer.id)
assert somethingCopy.map(ModelFilter.exclude('pointer')) == someThing.map(ModelFilter.exclude('pointer'))
assert somethingPart.name=='Foo bar'
assert somethingCopy.count == 11

someThing.count = 93
someThing.store()

assert factory('thingFull',someThing.pointer.id).count == 93
assert factory('thingCopy',someThing.pointer.id).count == 11

latch = new CountDownLatch(1)

offer(channel:'/data/transfer'){[
	transfer:[
		from: 'thingFull',
		id: someThing.pointer.id,
		to: 'thingCopy'
	],
	callback: { results->
		log(debug:"Got data transfer callback ${results}")
		latch.countDown()
	}
]}

assert latch.await(2,TimeUnit.SECONDS)
assert factory('thingCopy',someThing.pointer.id).count == 93